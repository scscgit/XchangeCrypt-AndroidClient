/**
 * TradingView REST API Specification for Brokers
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 * <p>
 * OpenAPI spec version:
 * <p>
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.List;

/**
 * Map of Broker instrument names and TradingView instrument names
 **/
@ApiModel(description = "Map of Broker instrument names and TradingView instrument names")
public class SymbolMapping {

  @SerializedName("symbols")
  private List<SingleMapping> symbols = null;
  @SerializedName("fields")
  private List<SingleField> fields = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public List<SingleMapping> getSymbols() {
    return symbols;
  }

  public void setSymbols(List<SingleMapping> symbols) {
    this.symbols = symbols;
  }

  /**
   * Array with the only one element `['brokerSymbol']`.
   **/
  @ApiModelProperty(value = "Array with the only one element `['brokerSymbol']`.")
  public List<SingleField> getFields() {
    return fields;
  }

  public void setFields(List<SingleField> fields) {
    this.fields = fields;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SymbolMapping symbolMapping = (SymbolMapping) o;
    return (this.symbols == null ? symbolMapping.symbols == null : this.symbols.equals(symbolMapping.symbols)) &&
      (this.fields == null ? symbolMapping.fields == null : this.fields.equals(symbolMapping.fields));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.symbols == null ? 0 : this.symbols.hashCode());
    result = 31 * result + (this.fields == null ? 0 : this.fields.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SymbolMapping {\n");

    sb.append("  symbols: ").append(symbols).append("\n");
    sb.append("  fields: ").append(fields).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
