/**
 * TradingView REST API Specification for Brokers
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.OrderDuration;
import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Order {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("instrument")
  private String instrument = null;
  @SerializedName("qty")
  private BigDecimal qty = null;
  public enum SideEnum {
     buy,  sell, 
  };
  @SerializedName("side")
  private SideEnum side = null;
  public enum TypeEnum {
     market,  stop,  limit,  stoplimit, 
  };
  @SerializedName("type")
  private TypeEnum type = null;
  @SerializedName("filledQty")
  private BigDecimal filledQty = null;
  @SerializedName("avgPrice")
  private BigDecimal avgPrice = null;
  @SerializedName("limitPrice")
  private BigDecimal limitPrice = null;
  @SerializedName("stopPrice")
  private BigDecimal stopPrice = null;
  @SerializedName("parentId")
  private String parentId = null;
  public enum ParentTypeEnum {
     order,  position, 
  };
  @SerializedName("parentType")
  private ParentTypeEnum parentType = null;
  @SerializedName("duration")
  private OrderDuration duration = null;
  public enum StatusEnum {
     placing,  inactive,  working,  rejected,  filled,  cancelled, 
  };
  @SerializedName("status")
  private StatusEnum status = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Instrument name that is used on a broker's side
   **/
  @ApiModelProperty(required = true, value = "Instrument name that is used on a broker's side")
  public String getInstrument() {
    return instrument;
  }
  public void setInstrument(String instrument) {
    this.instrument = instrument;
  }

  /**
   * Quantity
   **/
  @ApiModelProperty(required = true, value = "Quantity")
  public BigDecimal getQty() {
    return qty;
  }
  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }

  /**
   * Side. Possible values &ndash; \"buy\" and \"sell\".
   **/
  @ApiModelProperty(required = true, value = "Side. Possible values &ndash; \"buy\" and \"sell\".")
  public SideEnum getSide() {
    return side;
  }
  public void setSide(SideEnum side) {
    this.side = side;
  }

  /**
   * Type. Possible values &ndash; \"market\", \"stop\", \"limit\", \"stoplimit\".
   **/
  @ApiModelProperty(required = true, value = "Type. Possible values &ndash; \"market\", \"stop\", \"limit\", \"stoplimit\".")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Filled quantity.
   **/
  @ApiModelProperty(value = "Filled quantity.")
  public BigDecimal getFilledQty() {
    return filledQty;
  }
  public void setFilledQty(BigDecimal filledQty) {
    this.filledQty = filledQty;
  }

  /**
   * Average price of order fills. It should be provided for filled / partly filled orders.
   **/
  @ApiModelProperty(value = "Average price of order fills. It should be provided for filled / partly filled orders.")
  public BigDecimal getAvgPrice() {
    return avgPrice;
  }
  public void setAvgPrice(BigDecimal avgPrice) {
    this.avgPrice = avgPrice;
  }

  /**
   * Limit Price for Limit or StopLimit order.
   **/
  @ApiModelProperty(value = "Limit Price for Limit or StopLimit order.")
  public BigDecimal getLimitPrice() {
    return limitPrice;
  }
  public void setLimitPrice(BigDecimal limitPrice) {
    this.limitPrice = limitPrice;
  }

  /**
   * Stop Price for Stop or StopLimit order.
   **/
  @ApiModelProperty(value = "Stop Price for Stop or StopLimit order.")
  public BigDecimal getStopPrice() {
    return stopPrice;
  }
  public void setStopPrice(BigDecimal stopPrice) {
    this.stopPrice = stopPrice;
  }

  /**
   * Identifier of a parent order or a parent position (for position brackets) depending on `parentType`. Should be set only for bracket orders.
   **/
  @ApiModelProperty(value = "Identifier of a parent order or a parent position (for position brackets) depending on `parentType`. Should be set only for bracket orders.")
  public String getParentId() {
    return parentId;
  }
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  /**
   * Type of order's parent. Should be set only for bracket orders.
   **/
  @ApiModelProperty(value = "Type of order's parent. Should be set only for bracket orders.")
  public ParentTypeEnum getParentType() {
    return parentType;
  }
  public void setParentType(ParentTypeEnum parentType) {
    this.parentType = parentType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public OrderDuration getDuration() {
    return duration;
  }
  public void setDuration(OrderDuration duration) {
    this.duration = duration;
  }

  /**
   * String constants to describe an order status.  `Status`  | Description ----------|------------- placing   | order is not created on a broker's side yet inactive  | bracket order is created but waiting for a base order to be filled working   | order is created but not executed yet rejected  | order is rejected for some reason filled    | order is fully executed cancelled  | order is cancelled 
   **/
  @ApiModelProperty(required = true, value = "String constants to describe an order status.  `Status`  | Description ----------|------------- placing   | order is not created on a broker's side yet inactive  | bracket order is created but waiting for a base order to be filled working   | order is created but not executed yet rejected  | order is rejected for some reason filled    | order is fully executed cancelled  | order is cancelled ")
  public StatusEnum getStatus() {
    return status;
  }
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return (this.id == null ? order.id == null : this.id.equals(order.id)) &&
        (this.instrument == null ? order.instrument == null : this.instrument.equals(order.instrument)) &&
        (this.qty == null ? order.qty == null : this.qty.equals(order.qty)) &&
        (this.side == null ? order.side == null : this.side.equals(order.side)) &&
        (this.type == null ? order.type == null : this.type.equals(order.type)) &&
        (this.filledQty == null ? order.filledQty == null : this.filledQty.equals(order.filledQty)) &&
        (this.avgPrice == null ? order.avgPrice == null : this.avgPrice.equals(order.avgPrice)) &&
        (this.limitPrice == null ? order.limitPrice == null : this.limitPrice.equals(order.limitPrice)) &&
        (this.stopPrice == null ? order.stopPrice == null : this.stopPrice.equals(order.stopPrice)) &&
        (this.parentId == null ? order.parentId == null : this.parentId.equals(order.parentId)) &&
        (this.parentType == null ? order.parentType == null : this.parentType.equals(order.parentType)) &&
        (this.duration == null ? order.duration == null : this.duration.equals(order.duration)) &&
        (this.status == null ? order.status == null : this.status.equals(order.status));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.instrument == null ? 0: this.instrument.hashCode());
    result = 31 * result + (this.qty == null ? 0: this.qty.hashCode());
    result = 31 * result + (this.side == null ? 0: this.side.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.filledQty == null ? 0: this.filledQty.hashCode());
    result = 31 * result + (this.avgPrice == null ? 0: this.avgPrice.hashCode());
    result = 31 * result + (this.limitPrice == null ? 0: this.limitPrice.hashCode());
    result = 31 * result + (this.stopPrice == null ? 0: this.stopPrice.hashCode());
    result = 31 * result + (this.parentId == null ? 0: this.parentId.hashCode());
    result = 31 * result + (this.parentType == null ? 0: this.parentType.hashCode());
    result = 31 * result + (this.duration == null ? 0: this.duration.hashCode());
    result = 31 * result + (this.status == null ? 0: this.status.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  instrument: ").append(instrument).append("\n");
    sb.append("  qty: ").append(qty).append("\n");
    sb.append("  side: ").append(side).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  filledQty: ").append(filledQty).append("\n");
    sb.append("  avgPrice: ").append(avgPrice).append("\n");
    sb.append("  limitPrice: ").append(limitPrice).append("\n");
    sb.append("  stopPrice: ").append(stopPrice).append("\n");
    sb.append("  parentId: ").append(parentId).append("\n");
    sb.append("  parentType: ").append(parentType).append("\n");
    sb.append("  duration: ").append(duration).append("\n");
    sb.append("  status: ").append(status).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
