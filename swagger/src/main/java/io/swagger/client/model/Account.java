/**
 * TradingView REST API Specification for Brokers
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 * <p>
 * OpenAPI spec version:
 * <p>
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@ApiModel(description = "")
public class Account {

  @SerializedName("id")
  private String id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("currency")
  private String currency = null;
  @SerializedName("currencySign")
  private String currencySign = null;
  @SerializedName("config")
  private AccountFlags config = null;

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  /**
   * Account title that is displayed to a user
   **/
  @ApiModelProperty(required = true, value = "Account title that is displayed to a user")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  /**
   * Abbreviation of account currency
   **/
  @ApiModelProperty(value = "Abbreviation of account currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  /**
   * Account currency symbol
   **/
  @ApiModelProperty(value = "Account currency symbol")
  public String getCurrencySign() {
    return currencySign;
  }

  public void setCurrencySign(String currencySign) {
    this.currencySign = currencySign;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public AccountFlags getConfig() {
    return config;
  }

  public void setConfig(AccountFlags config) {
    this.config = config;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Account account = (Account) o;
    return (this.id == null ? account.id == null : this.id.equals(account.id)) &&
      (this.name == null ? account.name == null : this.name.equals(account.name)) &&
      (this.currency == null ? account.currency == null : this.currency.equals(account.currency)) &&
      (this.currencySign == null ? account.currencySign == null : this.currencySign.equals(account.currencySign)) &&
      (this.config == null ? account.config == null : this.config.equals(account.config));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0 : this.id.hashCode());
    result = 31 * result + (this.name == null ? 0 : this.name.hashCode());
    result = 31 * result + (this.currency == null ? 0 : this.currency.hashCode());
    result = 31 * result + (this.currencySign == null ? 0 : this.currencySign.hashCode());
    result = 31 * result + (this.config == null ? 0 : this.config.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Account {\n");

    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  currency: ").append(currency).append("\n");
    sb.append("  currencySign: ").append(currencySign).append("\n");
    sb.append("  config: ").append(config).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
