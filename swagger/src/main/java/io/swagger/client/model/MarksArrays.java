/**
 * TradingView REST API Specification for Brokers
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.math.BigDecimal;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Bar marks data.
 **/
@ApiModel(description = "Bar marks data.")
public class MarksArrays {
  
  @SerializedName("id")
  private List<BigDecimal> id = null;
  @SerializedName("time")
  private List<BigDecimal> time = null;
  @SerializedName("color")
  private List<String> color = null;
  @SerializedName("text")
  private List<String> text = null;
  @SerializedName("label")
  private List<String> label = null;
  @SerializedName("labelFontColor")
  private List<String> labelFontColor = null;
  @SerializedName("minSize")
  private List<BigDecimal> minSize = null;

  /**
   * Unique identifiers of marks.
   **/
  @ApiModelProperty(required = true, value = "Unique identifiers of marks.")
  public List<BigDecimal> getId() {
    return id;
  }
  public void setId(List<BigDecimal> id) {
    this.id = id;
  }

  /**
   * bar time, unix timestamp (UTC)
   **/
  @ApiModelProperty(required = true, value = "bar time, unix timestamp (UTC)")
  public List<BigDecimal> getTime() {
    return time;
  }
  public void setTime(List<BigDecimal> time) {
    this.time = time;
  }

  /**
   * Mark colors
   **/
  @ApiModelProperty(value = "Mark colors")
  public List<String> getColor() {
    return color;
  }
  public void setColor(List<String> color) {
    this.color = color;
  }

  /**
   * mark popup text. HTML supported
   **/
  @ApiModelProperty(value = "mark popup text. HTML supported")
  public List<String> getText() {
    return text;
  }
  public void setText(List<String> text) {
    this.text = text;
  }

  /**
   * a letter to be printed on a mark. Single character
   **/
  @ApiModelProperty(required = true, value = "a letter to be printed on a mark. Single character")
  public List<String> getLabel() {
    return label;
  }
  public void setLabel(List<String> label) {
    this.label = label;
  }

  /**
   * color of a letter on a mark
   **/
  @ApiModelProperty(value = "color of a letter on a mark")
  public List<String> getLabelFontColor() {
    return labelFontColor;
  }
  public void setLabelFontColor(List<String> labelFontColor) {
    this.labelFontColor = labelFontColor;
  }

  /**
   * minimal size of mark (diameter, pixels)
   **/
  @ApiModelProperty(value = "minimal size of mark (diameter, pixels)")
  public List<BigDecimal> getMinSize() {
    return minSize;
  }
  public void setMinSize(List<BigDecimal> minSize) {
    this.minSize = minSize;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarksArrays marksArrays = (MarksArrays) o;
    return (this.id == null ? marksArrays.id == null : this.id.equals(marksArrays.id)) &&
        (this.time == null ? marksArrays.time == null : this.time.equals(marksArrays.time)) &&
        (this.color == null ? marksArrays.color == null : this.color.equals(marksArrays.color)) &&
        (this.text == null ? marksArrays.text == null : this.text.equals(marksArrays.text)) &&
        (this.label == null ? marksArrays.label == null : this.label.equals(marksArrays.label)) &&
        (this.labelFontColor == null ? marksArrays.labelFontColor == null : this.labelFontColor.equals(marksArrays.labelFontColor)) &&
        (this.minSize == null ? marksArrays.minSize == null : this.minSize.equals(marksArrays.minSize));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    result = 31 * result + (this.color == null ? 0: this.color.hashCode());
    result = 31 * result + (this.text == null ? 0: this.text.hashCode());
    result = 31 * result + (this.label == null ? 0: this.label.hashCode());
    result = 31 * result + (this.labelFontColor == null ? 0: this.labelFontColor.hashCode());
    result = 31 * result + (this.minSize == null ? 0: this.minSize.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarksArrays {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  time: ").append(time).append("\n");
    sb.append("  color: ").append(color).append("\n");
    sb.append("  text: ").append(text).append("\n");
    sb.append("  label: ").append(label).append("\n");
    sb.append("  labelFontColor: ").append(labelFontColor).append("\n");
    sb.append("  minSize: ").append(minSize).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
