/**
 * XchangeCrypt REST API Specification
 * TradingView REST API Specification for Brokers (ASP.NET Core 2.0)
 * <p>
 * OpenAPI spec version: v1
 * Contact:
 * <p>
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Price data for an instrument
 **/
@ApiModel(description = "Price data for an instrument")
public class SingleQuote {

  @SerializedName("ch")
  private Double ch = null;
  @SerializedName("chp")
  private Double chp = null;
  @SerializedName("lp")
  private Double lp = null;
  @SerializedName("ask")
  private Double ask = null;
  @SerializedName("bid")
  private Double bid = null;
  @SerializedName("open_price")
  private Double openPrice = null;
  @SerializedName("high_price")
  private Double highPrice = null;
  @SerializedName("low_price")
  private Double lowPrice = null;
  @SerializedName("prev_close_price")
  private Double prevClosePrice = null;
  @SerializedName("volume")
  private Double volume = null;

  /**
   * Change (displayed in Watch and Detail)
   **/
  @ApiModelProperty(value = "Change (displayed in Watch and Detail)")
  public Double getCh() {
    return ch;
  }

  public void setCh(Double ch) {
    this.ch = ch;
  }

  /**
   * Change percent (displayed in Watch and Detail)
   **/
  @ApiModelProperty(value = "Change percent (displayed in Watch and Detail)")
  public Double getChp() {
    return chp;
  }

  public void setChp(Double chp) {
    this.chp = chp;
  }

  /**
   * Last price
   **/
  @ApiModelProperty(value = "Last price")
  public Double getLp() {
    return lp;
  }

  public void setLp(Double lp) {
    this.lp = lp;
  }

  /**
   * Ask price
   **/
  @ApiModelProperty(value = "Ask price")
  public Double getAsk() {
    return ask;
  }

  public void setAsk(Double ask) {
    this.ask = ask;
  }

  /**
   * Bid price
   **/
  @ApiModelProperty(value = "Bid price")
  public Double getBid() {
    return bid;
  }

  public void setBid(Double bid) {
    this.bid = bid;
  }

  /**
   * Open
   **/
  @ApiModelProperty(value = "Open")
  public Double getOpenPrice() {
    return openPrice;
  }

  public void setOpenPrice(Double openPrice) {
    this.openPrice = openPrice;
  }

  /**
   * High price
   **/
  @ApiModelProperty(value = "High price")
  public Double getHighPrice() {
    return highPrice;
  }

  public void setHighPrice(Double highPrice) {
    this.highPrice = highPrice;
  }

  /**
   * Low price
   **/
  @ApiModelProperty(value = "Low price")
  public Double getLowPrice() {
    return lowPrice;
  }

  public void setLowPrice(Double lowPrice) {
    this.lowPrice = lowPrice;
  }

  /**
   * Previous close price
   **/
  @ApiModelProperty(value = "Previous close price")
  public Double getPrevClosePrice() {
    return prevClosePrice;
  }

  public void setPrevClosePrice(Double prevClosePrice) {
    this.prevClosePrice = prevClosePrice;
  }

  /**
   * Volume
   **/
  @ApiModelProperty(value = "Volume")
  public Double getVolume() {
    return volume;
  }

  public void setVolume(Double volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SingleQuote singleQuote = (SingleQuote) o;
    return (this.ch == null ? singleQuote.ch == null : this.ch.equals(singleQuote.ch)) &&
      (this.chp == null ? singleQuote.chp == null : this.chp.equals(singleQuote.chp)) &&
      (this.lp == null ? singleQuote.lp == null : this.lp.equals(singleQuote.lp)) &&
      (this.ask == null ? singleQuote.ask == null : this.ask.equals(singleQuote.ask)) &&
      (this.bid == null ? singleQuote.bid == null : this.bid.equals(singleQuote.bid)) &&
      (this.openPrice == null ? singleQuote.openPrice == null : this.openPrice.equals(singleQuote.openPrice)) &&
      (this.highPrice == null ? singleQuote.highPrice == null : this.highPrice.equals(singleQuote.highPrice)) &&
      (this.lowPrice == null ? singleQuote.lowPrice == null : this.lowPrice.equals(singleQuote.lowPrice)) &&
      (this.prevClosePrice == null ? singleQuote.prevClosePrice == null : this.prevClosePrice.equals(singleQuote.prevClosePrice)) &&
      (this.volume == null ? singleQuote.volume == null : this.volume.equals(singleQuote.volume));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.ch == null ? 0 : this.ch.hashCode());
    result = 31 * result + (this.chp == null ? 0 : this.chp.hashCode());
    result = 31 * result + (this.lp == null ? 0 : this.lp.hashCode());
    result = 31 * result + (this.ask == null ? 0 : this.ask.hashCode());
    result = 31 * result + (this.bid == null ? 0 : this.bid.hashCode());
    result = 31 * result + (this.openPrice == null ? 0 : this.openPrice.hashCode());
    result = 31 * result + (this.highPrice == null ? 0 : this.highPrice.hashCode());
    result = 31 * result + (this.lowPrice == null ? 0 : this.lowPrice.hashCode());
    result = 31 * result + (this.prevClosePrice == null ? 0 : this.prevClosePrice.hashCode());
    result = 31 * result + (this.volume == null ? 0 : this.volume.hashCode());
    return result;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SingleQuote {\n");

    sb.append("  ch: ").append(ch).append("\n");
    sb.append("  chp: ").append(chp).append("\n");
    sb.append("  lp: ").append(lp).append("\n");
    sb.append("  ask: ").append(ask).append("\n");
    sb.append("  bid: ").append(bid).append("\n");
    sb.append("  openPrice: ").append(openPrice).append("\n");
    sb.append("  highPrice: ").append(highPrice).append("\n");
    sb.append("  lowPrice: ").append(lowPrice).append("\n");
    sb.append("  prevClosePrice: ").append(prevClosePrice).append("\n");
    sb.append("  volume: ").append(volume).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
